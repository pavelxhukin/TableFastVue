
services:
  user_api:
    build: ./server/user
    container_name: user_api
    ports:
      - 8000:8000
    volumes:
      - ./server/user:/app
    networks:
      - internal

  api:
    build: ./server/schedule
    container_name: api
    expose:
      - ${APP_HOST_PORT}:4000
    depends_on:
      - postgres
    volumes:
      - ./server/schedule:/app
    restart: 
      always
    env_file:
      - .env
    networks:
      - internal

  postgres:
    image: postgres:latest
    container_name: postgres_container
    environment:
      POSTGRES_USER: ${POSTGRES_DB_USER}
      POSTGRES_PASSWORD: ${POSTGRES_DB_PASSWORD}
      POSTGRES_DB: database
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - ${POSTGRESS_DB_HOST_PORT}:5432
    volumes:
      - .postgres:/var/lib/postgres/data
    restart:
      always
    networks:
      - internal

  rabbitmq:
    image: rabbitmq:3.10.7-management
    container_name: rabbitmq_container
    ports:
      - 15672:15672
    networks:
      - internal

  nginx:
    image: nginx:latest
    container_name: nginx_container
    ports: 
      - 80:80
    volumes:
      - ./html/index.html:/usr/share/nginx/html/index.html
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    depends_on: 
      - api
      - user_api
    links:
      - api:api
      - user_api:user_api
    networks:
      - internal

  
networks:
  internal:
    name: internal
    driver: overlay

    